use ("restDB");
db.restaurants.find();
db.restaurants.find({}, {restaurant_id:1,name:1,borough:1,cuisine:1});
db.restaurants.find({}, {_id:0,restaurant_id:1,name:1,borough:1,cuisine:1});
db.restaurants.find({}, {_id:0,restaurant_id:1,name:1,borough:1,"address.zipcode":1});
db.restaurants.find({ borough:"Bronx"}, {name:1, _id:0});
db.restaurants.find({borough:"Bronx"}, {name:1, _id:0}).limit(5);
db.restaurants.find({borough:"Bronx"}, {_id:0,name:1}).skip(5).limit(5);
db.restaurants.find({"grades.score" : {$gt:90 } } );
db.restaurants.find({"grades.score" : {$gt:80 , $lt:100 } } );
db.restaurants.find({"address.coord" : {$lt:-95.754168, } } ); //He deixat el segon element buit i tan panxo
db.restaurants.find({"cuisine" : { $ne: "American "}, "grades.score" : {$gt:70}, "address.coord":{$lt:-65.754168, } } );
db.restaurants.find({"cuisine" : { $ne: "American "}, "grades.score" : {$gt:70}, "address.coord":{$lt:-65.754168, } } );
db.restaurants.find({cuisine: {$ne: "American "}, "grades.grade" : 'A', borough: {$ne: "Brooklyn"}}, {name:1, _id:0,cuisine:1,grades:1, borough:1}).sort({cuisine:-1});
db.restaurants.find({name: /^Wil/}, {restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
db.restaurants.find({name: /ces$/}, {restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
db.restaurants.find({name: /Reg/}, {restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
db.restaurants.find({borough:"Bronx", cuisine: /American |Chinese/ } ); /*Also shows latin cuisine if you dont put the space after american*/
db.restaurants.find({borough: /Staten|Bronx|Queens|Brooklyn/}, {restaurant_id:1,name:1, borough:1, cuisine:1, _id:0})
db.restaurants.find({$and: [ {borough: {$ne:"Staten Island"} }, {borough: {$ne:"Bronx"} },   {borough:{$ne:"Queens"}}, {borough:{$ne:"Brooklyn"} } ] }, {restaurant_id:1,name:1,borough:1, cuisine:1, _id:0});
db.restaurants.find({"grades.score": {$lt: 11}}, {restaurant_id:1,name:1, borough:1,cuisine:1, _id:0})
db.restaurants.find({ $or: [ {$and: [ {cuisine: /Seafood/}, {cuisine: {$not: /American/}}, {cuisine: {$not: /Chinese/}} ] }, {name: /^Wil/} ] }, {restaurant_id:1,name:1, borough:1,cuisine:1, _id:0});
db.restaurants.find({"grades": {$elemMatch: {grade:'A', score:11, date: ISODate("2014-08-11T00:00:00Z")} }},{restaurant_id:1, name:1, grades:1, _id:0});
db.restaurants.find( { "grades.1": { date: ISODate("2014-08-11T00:00:00Z"),grade:'A', score: 9  } }, {restaurant_id:1,name:1,grades:1,_id:0});
db.restaurants.find( { "address.coord.1": {$gt:42, $lt:52} }, {restaurant_id:1,name:1,address:1,_id:0});
db.restaurants.find().sort({name:1});
db.restaurants.find().sort({name:-1});
db.restaurants.find({}, {_id:0, cuisine:1,borough:1}).sort({cuisine:1, borough:-1});/*Sisplau que volen dir aquests enunciats*/
db.restaurants.find({"address.street" : {$exists: true}}, {name:1, "address.street":1}); //db.restaurants.find( { "address.street" : {$type: "null"}  }, {name:1, "address.street":1});
db.restaurants.find({"address.coord" : {$type: "double"}}, {name:1, _id:0, "address.coord":1});
db.restaurants.find({"grades.score": {$mod: [7, 0]}}, {restaurant_id:1,name:1,"grades.grade":1,"grades.score":1,_id:0})
db.restaurants.find({name:/mon/i}, {name:1,borough:1,"address.coord":1,cuisine:1,_id:0}); //importa el case, torna coses diferents amb o sense la "i". Pero nose que demana el enunciat
db.restaurants.find({name: /^Mad/}, {name:1,borough:1,"address.coord":1,cuisine:1,_id:0})









